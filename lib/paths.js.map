{
  "version": 3,
  "sources": ["../src/paths.ts"],
  "sourcesContent": ["import * as fs from \"fs\";\nimport path from \"path\";\n\nexport function symlink(appPath: string, libPath = \"app.dev/lib\") {\n\tif (!fs.existsSync(appPath)) {\n\t\tthrow new Error(`App not found at: ${appPath}`);\n\t}\n\t// @ts-ignore\n\tconst target = CLAPP_SRC_PATH;\n\tconst parsed = path.parse(target);\n\n\tconst dest = path.resolve(appPath, \"Contents/Resources/\", libPath);\n\tconst linkPath = path.resolve(dest, parsed.name);\n\n\tif (!fs.existsSync(dest)) {\n\t\tfs.mkdirSync(dest, { recursive: true });\n\t}\n\n\tif (!fs.existsSync(linkPath)) {\n\t\tfs.symlinkSync(target, linkPath, \"dir\");\n\t}\n\tconst isDirectory = fs.statSync(linkPath).isDirectory();\n\n\treturn { target, linkPath, isDirectory };\n}\n\n// export function init(force = false) {\n// \tconst { devPath, libPath, proPath, srcPath } = props;\n\n// \tif (force || !fs.existsSync(props.devPath)) {\n// \t\tfs.mkdirSync(props.libPath, { recursive: true });\n// \t\tfs.mkdirSync(props.proPath, { recursive: true });\n\n// \t\tfs.writeFileSync(\n// \t\t\tpath.resolve(props.devPath, \"index.html\"),\n// \t\t\t`\n//       <script>var _es = new EventSource('/esbuild').addEventListener('change', (e) => console.log(e.data))</script>\n//       <h1>crawless (ext) app</h1><pre>${JSON.stringify(props, null, 2)}</pre>`\n// \t\t);\n\n// \t\t// create empty entry points\n// \t\tfs.writeFileSync(props.libFile(\"main.ts\"), ``);\n// \t\tfs.writeFileSync(props.proFile(\"main.ts\"), ``);\n\n// \t\tconsole.log(\"[app] [init]\", { devPath, libPath, proPath, srcPath });\n// \t}\n\n// \tconsole.log(\"[app] [paths]\", { devPath, libPath, proPath, srcPath });\n\n// \t// copy app & run files\n// \t// fs.copyFileSync(props.srcFile('app.js'), props.libFile('app.js'))\n// \t// fs.copyFileSync(props.srcFile('run.js'), props.libFile('run.js'))\n\n// \t// console.log('[app] synced!', [\n// \t//   props.libFile('app.js'),\n// \t//   props.libFile('run.js'),\n// \t// ])\n// }\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoB;AACpB,kBAAiB;AAEV,SAAS,QAAQ,SAAiB,UAAU,eAAe;AACjE,MAAI,CAAI,cAAW,OAAO,GAAG;AAC5B,UAAM,IAAI,MAAM,qBAAqB,OAAO,EAAE;AAAA,EAC/C;AAEA,QAAM,SAAS;AACf,QAAM,SAAS,YAAAA,QAAK,MAAM,MAAM;AAEhC,QAAM,OAAO,YAAAA,QAAK,QAAQ,SAAS,uBAAuB,OAAO;AACjE,QAAM,WAAW,YAAAA,QAAK,QAAQ,MAAM,OAAO,IAAI;AAE/C,MAAI,CAAI,cAAW,IAAI,GAAG;AACzB,IAAG,aAAU,MAAM,EAAE,WAAW,KAAK,CAAC;AAAA,EACvC;AAEA,MAAI,CAAI,cAAW,QAAQ,GAAG;AAC7B,IAAG,eAAY,QAAQ,UAAU,KAAK;AAAA,EACvC;AACA,QAAM,cAAiB,YAAS,QAAQ,EAAE,YAAY;AAEtD,SAAO,EAAE,QAAQ,UAAU,YAAY;AACxC;",
  "names": ["path"]
}
